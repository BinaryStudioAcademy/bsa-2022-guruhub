name: Continuous Integration. Integration Testing

on:
  pull_request:
    branches:
      - production
  workflow_dispatch:

env:
  DB_NAME: guruhub-ci-integration
  DB_USER: postgres
  DB_PASSWORD: postgres_p4$5w0rd

jobs:
  ci-integration:
    runs-on: ubuntu-latest

    env:
      DB_POOL_MIN: 2
      DB_POOL_MAX: 10
      DB_DIALECT: pg

    services:
      db:
        image: postgres:14.5
        env:
          POSTGRES_DB: ${{ env.DB_NAME }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 5432:5432

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2

      - name: Install NodeJS
        uses: actions/setup-node@v2
        with:
          node-version-file: .nvmrc

      - name: Install JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Install Dependencies
        run: |
          npm run install:all

      - name: Build Backend
        working-directory: ./backend
        run: |
          npm run build

      - name: Set Database URL
        run: |
          echo "DATABASE_URL=postgresql://$DB_USER:$DB_PASSWORD@localhost:5432/$DB_NAME" >> $GITHUB_ENV

      - name: Migrate and Seed Database
        working-directory: ./backend
        run: |
          npm run migrate
          npm run seed

      - name: Start Backend
        working-directory: ./backend
        env:
          NODE_ENV: production
          PORT: 3001

          UDEMY_CLIENT_ID: ${{ secrets.UDEMY_CLIENT_ID }}
          UDEMY_CLIENT_SECRET: ${{ secrets.UDEMY_CLIENT_SECRET }}
          UDEMY_BASE_URL: https://www.udemy.com/api-2.0/

          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-central-1
        run: |
          npm run start:build & npx wait-on 'tcp:localhost:$PORT'

      - name: Run Tests
        id: runTests
        working-directory: ./backend/tests
        env:
          LOCAL_API_PREFIX_URL: http://localhost:3001/api/v1

          STUDENT_EMAIL: test.student@guruhub.club
          STUDENT_PASSWORD: Pa55word

          JS_MENTOR_EMAIL: test.jsmentor@guruhub.club
          JS_MENTOR_PASSWORD: Pa55word

          PYTHON_MENTOR_EMAIL: test.pythonmentor@guruhub.club
          PYTHON_MENTOR_PASSWORD: Pa55word

          CSHARP_MENTOR_EMAIL: test.csharpmentor@guruhub.club
          CSHARP_MENTOR_PASSWORD: Pa55word

          INTERVIEWS_MANAGER_EMAIL: test.interviewsmanager@guruhub.club
          INTERVIEWS_MANAGER_PASSWORD: Pa55word

          INTERVIEWER_EMAIL: test.interviewer@guruhub.club
          INTERVIEWER_PASSWORD: Pa55word

          CATEGORIES_MANAGER_EMAIL: test.categoriesmanager@guruhub.club
          CATEGORIES_MANAGER_PASSWORD: Pa55word

          MENTORING_MANAGER_EMAIL: test.mentoringmanager@guruhub.club
          MENTORING_MANAGER_PASSWORD: Pa55word

          UAM_MANAGER_EMAIL: admin@guruhub.club
          UAM_MANAGER_PASSWORD: Pa55word
        run: |
          npm run test:development

      - name: Generate Test Reports
        id: generateTestReports
        if: ${{ (steps.runTests.outcome == 'success') || (steps.runTests.outcome == 'failure') }}
        working-directory: ./backend/tests
        run: |
          npm run generate-reports && zip -r allure-report.zip allure-report

      - name: Get Current Date
        id: getCurrentDate
        if: ${{ steps.generateTestReports.outcome == 'success' }}
        run: |
          echo "::set-output name=currentDate::$(date +'%Y-%m-%d_%H-%M-%S')"

      - name: Save Allure Report
        if: ${{ steps.getCurrentDate.outcome == 'success' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ format('allure-report_{0}.zip', steps.getCurrentDate.outputs.currentDate) }}
          path: ./backend/tests/allure-report.zip
          retention-days: 14

      - name: Save JUnit Report
        if: ${{ steps.getCurrentDate.outcome == 'success' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ format('junit-report_{0}.xml', steps.getCurrentDate.outputs.currentDate) }}
          path: ./backend/tests/junit-report/junit-report.xml
          retention-days: 14
