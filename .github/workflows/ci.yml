# TEST ACTION RUN 2
name: Continuous Integration

on:
  pull_request:
    branches:
      - development
      - production

jobs:
  ci:
    runs-on: ubuntu-latest

    env:
      BACKEND_PORT: 3001

    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2

      - name: Install NodeJS
        uses: actions/setup-node@v2
        with:
          node-version-file: .nvmrc

      - name: Install Dependencies
        run: |
          npm run install:all

      - name: Code Linting
        run: |
          npm run lint

      - name: Code Building
        run: |
          npm run build

      - name: Fill Server Env
        working-directory: ./backend
        env:
          NODE_ENV: production
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_POOL_MIN: 2
          DB_POOL_MAX: 10
          DB_DIALECT: pg
          UDEMY_CLIENT_ID: ${{ secrets.UDEMY_CLIENT_ID }}
          UDEMY_CLIENT_SECRET: ${{ secrets.UDEMY_CLIENT_SECRET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo "NODE_ENV=$NODE_ENV" >> .env
          echo "PORT=$BACKEND_PORT" >> .env
          echo "DATABASE_URL=postgres://$DB_USER:$DB_PASSWORD@localhost:5432/$DB_NAME" >> .env
          echo "DB_POOL_MIN=$DB_POOL_MIN" >> .env
          echo "DB_POOL_MAX=$DB_POOL_MAX" >> .env
          echo "DB_DIALECT=$DB_DIALECT" >> .env
          echo "UDEMY_CLIENT_ID=$UDEMY_CLIENT_ID" >> .env
          echo "UDEMY_CLIENT_SECRET=$UDEMY_CLIENT_SECRET" >> .env
          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> .env
          echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> .env

      - name: Fill Tests Env
        working-directory: ./backend/tests
        env:
          LOCAL_API_PREFIX_URL: http://localhost:3001/api/v1
          STUDENT_EMAIL: test.student@guruhub.club
          STUDENT_PASSWORD: Pa55word
          MENTOR_EMAIL: ''
          MENTOR_PASSWORD: ''
          INTERVIEWS_MANAGER_EMAIL: test.interviewsmanager@guruhub.club
          INTERVIEWS_MANAGER_PASSWORD: Pa55word
          INTERVIEWER_EMAIL: test.interviewer@guruhub.club
          INTERVIEWER_PASSWORD: Pa55word
          CATEGORIES_MANAGER_EMAIL: test.categoriesmanager@guruhub.club
          CATEGORIES_MANAGER_PASSWORD: Pa55word
          MENTORING_MANAGER_EMAIL: test.mentoringmanager@guruhub.club
          MENTORING_MANAGER_PASSWORD: Pa55word
          UAM_MANAGER_EMAIL: admin@guruhub.club
          UAM_MANAGER_PASSWORD: Pa55word
        run: |
          echo "LOCAL_API_PREFIX_URL=$LOCAL_API_PREFIX_URL" >> .env
          echo "STUDENT_EMAIL=$STUDENT_EMAIL" >> .env
          echo "STUDENT_PASSWORD=$STUDENT_PASSWORD" >> .env
          echo "MENTOR_EMAIL=$MENTOR_EMAIL" >> .env
          echo "MENTOR_PASSWORD=$MENTOR_PASSWORD" >> .env
          echo "INTERVIEWS_MANAGER_EMAIL=$INTERVIEWS_MANAGER_EMAIL" >> .env
          echo "INTERVIEWS_MANAGER_PASSWORD=$INTERVIEWS_MANAGER_PASSWORD" >> .env
          echo "INTERVIEWER_EMAIL=$INTERVIEWER_EMAIL" >> .env
          echo "INTERVIEWER_PASSWORD=$INTERVIEWER_PASSWORD" >> .env
          echo "CATEGORIES_MANAGER_EMAIL=$CATEGORIES_MANAGER_EMAIL" >> .env
          echo "CATEGORIES_MANAGER_PASSWORD=$CATEGORIES_MANAGER_PASSWORD" >> .env
          echo "MENTORING_MANAGER_EMAIL=$MENTORING_MANAGER_EMAIL" >> .env
          echo "MENTORING_MANAGER_PASSWORD=$MENTORING_MANAGER_PASSWORD" >> .env
          echo "UAM_MANAGER_EMAIL=$UAM_MANAGER_EMAIL" >> .env
          echo "UAM_MANAGER_PASSWORD=$UAM_MANAGER_PASSWORD" >> .env

      - name: Start Server
        working-directory: ./backend
        run: |
          npm start & npm run wait-for-start

      - name: Run Tests
        working-directory: ./backend/tests
        run: |
          npm run test:development
